{"ast":null,"code":"export default class DateTime {\n  constructor(date) {\n    this.date = date ? date : new Date();\n    this.monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    this.dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  }\n\n  hours() {\n    return this.formatUnitOfTime(this.date.getHours());\n  }\n\n  minutes() {\n    return this.formatUnitOfTime(this.date.getMinutes());\n  }\n\n  seconds() {\n    return this.formatUnitOfTime(this.date.getSeconds());\n  }\n\n  dayOfWeek() {\n    return this.dayNames[this.date.getDay()];\n  }\n\n  dayOfMonth() {\n    return this.formatUnitOfTime(this.date.getUTCDate());\n  }\n\n  month() {\n    return this.monthNames[this.date.getMonth()];\n  }\n\n  year() {\n    return \"\".concat(this.date.getFullYear());\n  }\n\n  formatUnitOfTime(unitOfTime) {\n    return unitOfTime < 10 ? \"0\".concat(unitOfTime) : \"\".concat(unitOfTime);\n  }\n\n  static toDateString(date) {\n    var dateTime = new DateTime(date);\n    return \"\".concat(dateTime.dayOfWeek().substring(0, 3), \" \").concat(dateTime.dayOfMonth(), \" \").concat(dateTime.month(), \" \").concat(dateTime.year());\n  }\n\n  static toTimeString(date) {\n    var dateTime = new DateTime(date);\n    return \"\".concat(dateTime.hours(), \":\").concat(dateTime.minutes(), \":\").concat(dateTime.seconds());\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\allir\\Desktop\\furthermore\\src\\lib\\DateTime.js"],"names":["DateTime","constructor","date","Date","monthNames","dayNames","hours","formatUnitOfTime","getHours","minutes","getMinutes","seconds","getSeconds","dayOfWeek","getDay","dayOfMonth","getUTCDate","month","getMonth","year","getFullYear","unitOfTime","toDateString","dateTime","substring","toTimeString"],"mappings":"AAAA,eAAe,MAAMA,QAAN,CAAe;AAE1BC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAI,GAAGA,IAAH,GAAU,IAAIC,IAAJ,EAA1B;AAEA,SAAKC,UAAL,GAAkB,CACd,SADc,EACH,UADG,EACS,OADT,EAEd,OAFc,EAEL,KAFK,EAEE,MAFF,EAGd,MAHc,EAGN,QAHM,EAGI,WAHJ,EAId,SAJc,EAIH,UAJG,EAIS,UAJT,CAAlB;AAOA,SAAKC,QAAL,GAAgB,CACZ,QADY,EACF,QADE,EACQ,SADR,EACmB,WADnB,EAEZ,UAFY,EAEA,QAFA,EAEU,UAFV,CAAhB;AAIH;;AAEDC,EAAAA,KAAK,GAAG;AACJ,WAAO,KAAKC,gBAAL,CAAsB,KAAKL,IAAL,CAAUM,QAAV,EAAtB,CAAP;AACH;;AAEDC,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKF,gBAAL,CAAsB,KAAKL,IAAL,CAAUQ,UAAV,EAAtB,CAAP;AACH;;AAEDC,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKJ,gBAAL,CAAsB,KAAKL,IAAL,CAAUU,UAAV,EAAtB,CAAP;AACH;;AAEDC,EAAAA,SAAS,GAAG;AACR,WAAO,KAAKR,QAAL,CAAc,KAAKH,IAAL,CAAUY,MAAV,EAAd,CAAP;AACH;;AAEDC,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKR,gBAAL,CAAsB,KAAKL,IAAL,CAAUc,UAAV,EAAtB,CAAP;AACH;;AAEDC,EAAAA,KAAK,GAAG;AACJ,WAAO,KAAKb,UAAL,CAAgB,KAAKF,IAAL,CAAUgB,QAAV,EAAhB,CAAP;AACH;;AAEDC,EAAAA,IAAI,GAAG;AACH,qBAAU,KAAKjB,IAAL,CAAUkB,WAAV,EAAV;AACH;;AAEDb,EAAAA,gBAAgB,CAACc,UAAD,EAAa;AACzB,WAAOA,UAAU,GAAG,EAAb,cAAsBA,UAAtB,cAAwCA,UAAxC,CAAP;AACH;;AAED,SAAOC,YAAP,CAAoBpB,IAApB,EAA0B;AACtB,QAAIqB,QAAQ,GAAG,IAAIvB,QAAJ,CAAaE,IAAb,CAAf;AAEA,qBAAUqB,QAAQ,CAACV,SAAT,GAAqBW,SAArB,CAA+B,CAA/B,EAAkC,CAAlC,CAAV,cAAkDD,QAAQ,CAACR,UAAT,EAAlD,cAA2EQ,QAAQ,CAACN,KAAT,EAA3E,cAA+FM,QAAQ,CAACJ,IAAT,EAA/F;AACH;;AAED,SAAOM,YAAP,CAAoBvB,IAApB,EAA0B;AACtB,QAAIqB,QAAQ,GAAG,IAAIvB,QAAJ,CAAaE,IAAb,CAAf;AAEA,qBAAUqB,QAAQ,CAACjB,KAAT,EAAV,cAA8BiB,QAAQ,CAACd,OAAT,EAA9B,cAAoDc,QAAQ,CAACZ,OAAT,EAApD;AACH;;AA5DyB","sourcesContent":["export default class DateTime {\n\n    constructor(date) {\n        this.date = date ? date : new Date();\n\n        this.monthNames = [\n            'January', 'February', 'March',\n            'April', 'May', 'June',\n            'July', 'August', 'September',\n            'October', 'November', 'December'\n        ];\n\n        this.dayNames = [\n            'Sunday', 'Monday', 'Tuesday', 'Wednesday',\n            'Thursday', 'Friday', 'Saturday'\n        ];\n    }\n\n    hours() {\n        return this.formatUnitOfTime(this.date.getHours());\n    }\n\n    minutes() {\n        return this.formatUnitOfTime(this.date.getMinutes());\n    }\n\n    seconds() {\n        return this.formatUnitOfTime(this.date.getSeconds());\n    }\n\n    dayOfWeek() {\n        return this.dayNames[this.date.getDay()];\n    }\n\n    dayOfMonth() {\n        return this.formatUnitOfTime(this.date.getUTCDate());\n    }\n\n    month() {\n        return this.monthNames[this.date.getMonth()];\n    }\n\n    year() {\n        return `${this.date.getFullYear()}`;\n    }\n\n    formatUnitOfTime(unitOfTime) {\n        return unitOfTime < 10 ? `0${unitOfTime}` : `${unitOfTime}`;\n    }\n\n    static toDateString(date) {\n        var dateTime = new DateTime(date);\n\n        return `${dateTime.dayOfWeek().substring(0, 3)} ${dateTime.dayOfMonth()} ${dateTime.month()} ${dateTime.year()}`;\n    }\n\n    static toTimeString(date) {\n        var dateTime = new DateTime(date);\n\n        return `${dateTime.hours()}:${dateTime.minutes()}:${dateTime.seconds()}`;\n    }\n}"]},"metadata":{},"sourceType":"module"}