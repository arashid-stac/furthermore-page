{"version":3,"sources":["js/contents.js","lib/DateTime.js","js/Display.js","js/contents2.js","js/checkTime.js","js/App.js","js/serviceWorker.js","index.js"],"names":["App21","react_default","a","createElement","className","class","DateTime","date","Object","classCallCheck","this","Date","monthNames","dayNames","formatUnitOfTime","getHours","getMinutes","getSeconds","getDay","getUTCDate","getMonth","concat","getFullYear","unitOfTime","dateTime","dayOfWeek","substring","dayOfMonth","month","year","hours","minutes","seconds","Display","props","toTimeString","defaultProps","isDateVisible","Clock","_this","possibleConstructorReturn","getPrototypeOf","call","state","toggleDate","bind","assertThisInitialized","startTime","clearInterval","timer","_this2","setInterval","setState","prevState","js_Display","Component","App22","hour","App","contents","contents2","checkTime","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6OAuGeA,MApGf,WACI,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKE,MAAM,gBACPJ,EAAAC,EAAAC,cAAA,0BAEJF,EAAAC,EAAAC,cAAA,OAAKE,MAAM,oBACPJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,aACAH,EAAAC,EAAAC,cAAA,uTAMAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,WACAH,EAAAC,EAAAC,cAAA,smBAQAF,EAAAC,EAAAC,cAAA,+MAIAF,EAAAC,EAAAC,cAAA,8bAOAF,EAAAC,EAAAC,cAAA,0fAQAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,wBACAH,EAAAC,EAAAC,cAAA,oqBASAF,EAAAC,EAAAC,cAAA,qTAMAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,4CACAH,EAAAC,EAAAC,cAAA,msBASAF,EAAAC,EAAAC,cAAA,2ZAMAF,EAAAC,EAAAC,cAAA,kgBAQAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,YACAH,EAAAC,EAAAC,cAAA,0ZAMAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,4BACAH,EAAAC,EAAAC,cAAA,6OC7FKG,aAEjB,SAAAA,EAAYC,GAAOC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GACfI,KAAKH,KAAOA,GAAc,IAAII,KAE9BD,KAAKE,WAAa,CACd,UAAW,WAAY,QACvB,QAAS,MAAO,OAChB,OAAQ,SAAU,YAClB,UAAW,WAAY,YAG3BF,KAAKG,SAAW,CACZ,SAAU,SAAU,UAAW,YAC/B,WAAY,SAAU,gEAK1B,OAAOH,KAAKI,iBAAiBJ,KAAKH,KAAKQ,8CAIvC,OAAOL,KAAKI,iBAAiBJ,KAAKH,KAAKS,gDAIvC,OAAON,KAAKI,iBAAiBJ,KAAKH,KAAKU,kDAIvC,OAAOP,KAAKG,SAASH,KAAKH,KAAKW,+CAI/B,OAAOR,KAAKI,iBAAiBJ,KAAKH,KAAKY,8CAIvC,OAAOT,KAAKE,WAAWF,KAAKH,KAAKa,2CAIjC,SAAAC,OAAUX,KAAKH,KAAKe,wDAGPC,GACb,OAAOA,EAAa,GAAb,IAAAF,OAAsBE,GAAtB,GAAAF,OAAwCE,0CAG/BhB,GAChB,IAAIiB,EAAW,IAAIlB,EAASC,GAE5B,SAAAc,OAAUG,EAASC,YAAYC,UAAU,EAAG,GAA5C,KAAAL,OAAkDG,EAASG,aAA3D,KAAAN,OAA2EG,EAASI,QAApF,KAAAP,OAA+FG,EAASK,6CAGxFtB,GAChB,IAAIiB,EAAW,IAAIlB,EAASC,GAE5B,SAAAc,OAAUG,EAASM,QAAnB,KAAAT,OAA8BG,EAASO,UAAvC,KAAAV,OAAoDG,EAASQ,oBCvD/DC,EAAU,SAACC,GAAD,OACZjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBE,EAAS6B,aAAaD,EAAM3B,YAQ/E0B,EAAQG,aAAe,CACnB7B,KAAM,IAAII,KACV0B,eAAe,GAQJJ,QCkBAK,cAvCX,SAAAA,IAAc,IAAAC,EAAA,OAAA/B,OAAAC,EAAA,EAAAD,CAAAE,KAAA4B,IACVC,EAAA/B,OAAAgC,EAAA,EAAAhC,CAAAE,KAAAF,OAAAiC,EAAA,EAAAjC,CAAA8B,GAAAI,KAAAhC,QAEKiC,MAAQ,CACTpC,KAAM,IAAII,KACV0B,eAAe,GAGnBE,EAAKK,WAAaL,EAAKK,WAAWC,KAAhBrC,OAAAsC,EAAA,EAAAtC,CAAA+B,IARRA,mFAYV7B,KAAKqC,2DAILC,cAActC,KAAKuC,2CAGX,IAAAC,EAAAxC,KACRA,KAAKuC,MAAQE,YAAY,WACrBD,EAAKE,SAAS,iBAAO,CAAE7C,KAAM,IAAII,SAClC,0CAIHD,KAAK0C,SAAS,SAACC,GAAD,MAAgB,CAAEhB,eAAgBgB,EAAUhB,kDAI1D,OACIpC,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAACmD,EAAD,CAAS/C,KAAMG,KAAKiC,MAAMpC,KAAM8B,cAAe3B,KAAKiC,MAAMN,wBAnCtDkB,aCgDLC,mLA/CP,IAAIC,GAAO,IAAI9C,MAAOI,WAEtB,OAAI0C,GAAQ,GAAKA,GAAQ,GAGjBxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,UACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,gNAKDqD,GAAQ,IAAMA,GAAQ,GAGzBxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,YACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,4OAMDqD,GAAQ,IAAMA,GAAQ,GAGzBxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,sBACAH,EAAAC,EAAAC,cAAA,iNAQJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,YACAH,EAAAC,EAAAC,cAAA,+LAxCAoD,aCGCG,mLAEjB,OACEzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACwD,EAAD,MACA1D,EAAAC,EAAAC,cAACyD,EAAD,MACA3D,EAAAC,EAAAC,cAAC0D,EAAD,cANyBN,aCMbO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnE,EAAAC,EAAAC,cAACkE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.bad7af99.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../style/App.css';\r\n\r\nfunction App21() {\r\n    return (\r\n        <div className=\"container\">\r\n            <div class=\"landing-text\">\r\n                <h2>FURTHERMORE</h2>\r\n            </div>\r\n            <div class=\"furthermore-text\">\r\n                <p className=\"title\">Who I Am.</p>\r\n                <p>\r\n                    In case you skipped passed the About section in the previous page allow me to reintroduce myself.\r\n                    Greetings, my name is Alli and on this page I will be summarizing my highs, lows, trials, tribulations,\r\n                    and overall thoughts and emotions on what has gotten me this far and has made me who I am today.\r\n                </p>\r\n\r\n                <p className=\"title\">Origin.</p>\r\n                <p>\r\n                    My story begins on the 7th of June in the year 1997. I was born and raised in the beautiful port city\r\n                    of Greece known as Piraeus. Oh the days of old. My childhood consisted of mostly prepubescent\r\n                    bicycle-adventures, cartoons, and card games. As an elementary and high school student I was never\r\n                    one to think of education as an essential aspect in one’s life. Regardless of how I viewed academia,\r\n                    I still somehow always found myself performing to the best of my abilities albeit not having any goal\r\n                    in mind. To my young self I just thought it to be natural to strive hard regardless of any output.\r\n                </p>\r\n                <p>\r\n                    Eventually I found myself graduating top of my class with a dilemma at hand. With no particular motive\r\n                    in mind, my hard-working but naive self was presented with an enormous question: What next?\r\n                </p>\r\n                <p>\r\n                    I looked around and it seemed to me that all my friends who were graduating with me knew exactly what\r\n                    they were going to do next with their lives. They were all heading to further their education in their\r\n                    particular fields of interest. But what about me? I had no interest in anything just because I had never\r\n                    really thought about life after high school. I guess that’s what happens when you work hard while wearing\r\n                    a blindfold.\r\n                </p>\r\n                <p>\r\n                    The realization of being left behind led to my searching for an area of focus. In retrospect, forcing\r\n                    myself to be interested in something was definitely a bad idea, although waiting until I naturally became\r\n                    interested in it would have probably been more detrimental. After some research, a knowledgeable friend\r\n                    named Google informed me that one of the most lucrative careers that were increasing in demand was Software\r\n                    Engineering. That finding began my forced interest into Computer Science.\r\n                </p>\r\n\r\n                <p className=\"title\">How I Ended Up Here.</p>\r\n                <p>\r\n                    After my decision to pursue computer science was made, I sought educational counselling from one of my\r\n                    professors. Ultimately, the verdict was that for this particular field of interest, the best decision\r\n                    would be to study in the United States. My professors thought it to be a good idea, my parents thought it\r\n                    to be a good idea, and my friends thought it to be a good idea. Everyone around me signaled a green light,\r\n                    and just like that I was off to the races. Without much solid research my 18 year old self blindly went\r\n                    through with the plan without considering multiple factors, one of them being my girlfriend who had decided\r\n                    to attend a University in Greece.\r\n                </p>\r\n                <p>\r\n                    And so the preparations began. After taking the SAT test (twice because I wasn’t happy the first time,\r\n                    although my second time ended up being a flop, too lol..), acquiring my student visa, and saying my\r\n                    emotional goodbyes, I was on my way to St. Thomas Aquinas College in Sparkill, New York.\r\n                </p>\r\n\r\n                <p className=\"title\">Realizing What I Had Gotten Myself Into.</p>\r\n                <p>\r\n                    Adjusting to life in America was not as hard as I thought it’d be since there was no language barrier\r\n                    (growing up I spoke English more than Greek, long story). My first year in college flew by and although\r\n                    I was academically excelling, I knew inside me that I was far from grasping the study of Computer Science,\r\n                    and, more specifically, the art of coding. My second year in college came around, and I still had no idea\r\n                    as to what any bit of coding meant regardless of my continuous excellent grades. I was told by an upperclassman\r\n                    that everybody starts out this way and that eventually they understand what their doing. But even so, my lack\r\n                    of understanding was still personally worrisome.\r\n                </p>\r\n                <p>\r\n                    This is when doubt began to creep in. Had I made the wrong choice? Sure my grades so far had been impeccable,\r\n                    but surely my lack of understanding would hinder my ability to make something of myself once the curtains for\r\n                    academia were closed. Three years in and I had started facing the fact that maybe my chosen career path was one\r\n                    I just would never be able to understand without a passion for it.\r\n                </p>\r\n                <p>\r\n                    I had given up until I noticed that one of my fellow computer science classmates began to drastically improve\r\n                    in the field and get a better grasp of what it means to be a Computer Scientist. The secret to solving my dilemma\r\n                    was available to me all along. The trick to becoming a better programmer was to actually engage in projects and\r\n                    create my own outside of just school-assigned tasks. This was completely news to me as someone who all his life\r\n                    had just followed the rule books with a blindfold on.\r\n                </p>\r\n\r\n                <p className=\"title\">Present.</p>\r\n                <p>\r\n                    Here I am now preparing to enter my senior year in college and feeling better about my skills as a programmer\r\n                    as ever. Every single day I find myself more immersed into different types of technologies, and, as a result,\r\n                    I have improved my knowledge and capabilities as a Computer Scientist. I used to walk the path because it seemed\r\n                    interesting. Now I walk the path because I myself am interested.</p>\r\n\r\n                <p className=\"title\">Where Do I Go From Here.</p>\r\n                <p>\r\n                    Although the path to perfecting my craft is far from over, I am in no rush to reach the conclusion.\r\n                    Thank you for taking the time to read my story, and I hope that my journey has somehow benefited you\r\n                    in your walk.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App21;\r\n","export default class DateTime {\n\n    constructor(date) {\n        this.date = date ? date : new Date();\n\n        this.monthNames = [\n            'January', 'February', 'March',\n            'April', 'May', 'June',\n            'July', 'August', 'September',\n            'October', 'November', 'December'\n        ];\n\n        this.dayNames = [\n            'Sunday', 'Monday', 'Tuesday', 'Wednesday',\n            'Thursday', 'Friday', 'Saturday'\n        ];\n    }\n\n    hours() {\n        return this.formatUnitOfTime(this.date.getHours());\n    }\n\n    minutes() {\n        return this.formatUnitOfTime(this.date.getMinutes());\n    }\n\n    seconds() {\n        return this.formatUnitOfTime(this.date.getSeconds());\n    }\n\n    dayOfWeek() {\n        return this.dayNames[this.date.getDay()];\n    }\n\n    dayOfMonth() {\n        return this.formatUnitOfTime(this.date.getUTCDate());\n    }\n\n    month() {\n        return this.monthNames[this.date.getMonth()];\n    }\n\n    year() {\n        return `${this.date.getFullYear()}`;\n    }\n\n    formatUnitOfTime(unitOfTime) {\n        return unitOfTime < 10 ? `0${unitOfTime}` : `${unitOfTime}`;\n    }\n\n    static toDateString(date) {\n        var dateTime = new DateTime(date);\n\n        return `${dateTime.dayOfWeek().substring(0, 3)} ${dateTime.dayOfMonth()} ${dateTime.month()} ${dateTime.year()}`;\n    }\n\n    static toTimeString(date) {\n        var dateTime = new DateTime(date);\n\n        return `${dateTime.hours()}:${dateTime.minutes()}:${dateTime.seconds()}`;\n    }\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DateTime from '../lib/DateTime';\r\n\r\nconst Display = (props) => (\r\n    <div className=\"container-fluid\">\r\n        <div className=\"d-flex flex-row\">\r\n            <div className=\"col-md-4 mx-auto\">\r\n                <div className=\"display\">\r\n                    <div className=\"display-time\">{DateTime.toTimeString(props.date)}</div>\r\n                    {/* {props.isDateVisible && <div className=\"display-date\">{DateTime.toDateString(props.date)}</div>} */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nDisplay.defaultProps = {\r\n    date: new Date(),\r\n    isDateVisible: true\r\n};\r\n\r\nDisplay.propTypes = {\r\n    date: PropTypes.object,\r\n    isDateVisible: PropTypes.bool\r\n};\r\n\r\nexport default Display;","import React, { Component } from 'react';\r\nimport Display from './Display';\r\n// import Panel from './Panel';\r\n\r\nclass Clock extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            date: new Date(),\r\n            isDateVisible: true\r\n        };\r\n\r\n        this.toggleDate = this.toggleDate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startTime();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    startTime() {\r\n        this.timer = setInterval(() => {\r\n            this.setState(() => ({ date: new Date() }));\r\n        }, 1000);\r\n    }\r\n\r\n    toggleDate() {\r\n        this.setState((prevState) => ({ isDateVisible: !prevState.isDateVisible }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <Panel toggleDate={this.toggleDate} dateOn={this.state.isDateVisible} /> */}\r\n                <Display date={this.state.date} isDateVisible={this.state.isDateVisible} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Clock;","import React, { Component } from 'react';\r\nimport '../style/App.css';\r\n\r\nclass App22 extends Component {\r\n    render() {\r\n        var hour = new Date().getHours();\r\n\r\n        if (hour >= 8 && hour <= 10) {\r\n            //At GYM\r\n            return (\r\n                <div className=\"action\">\r\n                    <p className=\"title-style\">At gym</p>\r\n                    <p className=\"action-content\">Right now I am most likely preparing myself for the day by physically engaging my body\r\n                    at the gym. Check back in a few hours if you're interested in finding out what I'm most likely\r\n                    going to doing later.</p>\r\n                </div>\r\n            );\r\n        } else if (hour >= 11 && hour <= 17) {\r\n            //LEARNING\r\n            return (\r\n                <div className=\"action\">\r\n                    <p className=\"title-style\">Learning</p>\r\n                    <p className=\"action-content\">Right now I am most likely keeping myself occupied by either honing my coding skills\r\n                    or looking for new technologies to learn. Check back in a few hours if you're interested in finding out what I'm most likely\r\n                    going to doing later.</p>\r\n                </div>\r\n\r\n            );\r\n        } else if (hour >= 18 && hour <= 21) {\r\n            //HOBBIES\r\n            return (\r\n                <div className=\"action\">\r\n                    <p className=\"title-style\">Hobbies/Relaxation</p>\r\n                    <p>Right now I am most likely putting all my business aside to relax after a hard day's work.\r\n                    Check back in a few hours if you're interested in finding out what I'm most likely\r\n                    going to doing later.</p>\r\n                </div>\r\n            );\r\n        } else {\r\n            //SLEEPING\r\n            return (\r\n                <div className=\"action\">\r\n                    <p className=\"title-style\">Sleeping</p>\r\n                    <p>Right now I am most likely either sleeping or preparing to sleep.\r\n                    Check back in a few hours if you're interested in finding out what I'm most likely\r\n                    going to doing later.</p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default App22;","import React, { Component } from 'react';\nimport '../style/App.css';\nimport App21 from './contents.js';\nimport Clock from './contents2';\nimport App22 from './checkTime';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"Everything\">\n        <App21 />\n        <Clock />\n        <App22 />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './js/App';\nimport * as serviceWorker from './js/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}